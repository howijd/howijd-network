#############################################################################
# NOTICE!
# You should not modify this file in this repository. This Workflow file
# is tested with workflow found at:
# https://github.com/howijd/.github/blob/main/.github/workflows/github-issues.yml
#
# And opens self update pull request if base template is updated at:
# https://github.com/howijd/.github/blob/main/workflow-templates/github-issues.yml
#############################################################################
name: GitHub issues

on:
  # RUNS ONLY IN .github REPO TO DISPATCH FOR OTHER REPOS
  push:
    branches:
      # Push events on main branch
      - main
    paths:
      - 'workflow-templates/github-issues.yml'
  # / RUNS ONLY IN .github REPO TO DISPATCH FOR OTHER REPOS
  issues:
    types:
      - opened
      # - edited
      # - deleted
      # - transferred
      - pinned
      - unpinned
      - closed
      # - reopened
      # - assigned
      # - unassigned
      # - labeled
      # - unlabeled
      # - locked
      # - unlocked
      # - milestoned
      # - demilestoned

  issue_comment:
    types:
      - created
      # - deleted
      # - edited

  schedule:
    - name: 'daily'
      cron: '0 0 * * *' # e.g. 5min */5 * * * *
    - name: 'hacktoberfest-running'
      cron: '0 0 * 10 *'
    - name: 'hacktoberfest-over'
      cron: '0 0 1 11 *'

  repository_dispatch:
    types:
      - workflow-file-github-issues

jobs:
  #############################################################################
  # Workflow pipline triggers
  # add pipline entrypoint based on event or multiple conditions
  #############################################################################
  issue-comment:
    name: Issue comment
    runs-on: ubuntu-latest
    if: github.event_name == 'issue_comment' && !github.event.issue.pull_request
    steps:
      - if: github.event.action == 'created'
        run: |
          echo "${{ github.event.sender.login }} commented on issue #${{ github.event.issue.number }}"

  # Issues
  issue:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'
    outputs:
      user-issues-total: ${{ steps.set-from-github-graphql.outputs.totalCount }}
      zen: ${{ steps.set-from-github-api.outputs.zen }}
    steps:
      # no pull request should trugger this job
      - name: is pull request
        if: github.event.issue.pull_request
        run: |
          echo "issue #${{ github.event.issue.number }} pull_request #${{ github.event.issue.pull_request }}"
          exit 1

      # just print issue payload
      - name: issue info
        env:
          EVENT_PAYLOAD: ${{ toJSON(github.event) }}
        run: |
          echo "${{ format('issue #{0} - {1}', github.event.issue.number, github.event.issue.html_url) }}"
          echo "$EVENT_PAYLOAD"

      - name: set from github graphql
        id: set-from-github-graphql
        uses: actions/github-script@v4
        with:
          script: |
            const user = context.payload.sender.login
            const repo = context.payload.repository.name
            const owner = context.payload.repository.owner.login
            // TOTAL ISSUES
            const query = `query($user: String, $owner: String!, $repo: String!) {
              repository(owner: $owner, name: $repo) {
                issues(filterBy: {createdBy: $user}) {
                  totalCount
                }
              }
            }`
            const res = await github.graphql(query, {
              "user": user,
              "repo": repo,
              "owner": owner,
            })
            core.info(`user: ${user} has total ${res.repository.issues.totalCount} issues`)
            core.setOutput('totalCount', res.repository.issues.totalCount)
      - name: set from github api
        id: set-from-github-api
        uses: actions/github-script@v4
        with:
          script: |
            // RANDOM SENTENCE
            // const zen = await github.rest.meta.getZen()
            const { data: zen } = await github.request('GET /zen')
            core.info(zen)
            core.setOutput('zen', zen)

  # Schedule
  schedule:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

  #############################################################################
  # Workflow action triggers
  # These jobs set outputs for (Workflow actors) use to trigger actual actions
  #############################################################################

  # compose automatic comment to add
  compose-comment:
    needs:
      - issue
    runs-on: ubuntu-latest
    outputs:
      issue_url: ${{ github.event.issue.html_url }}
      issue_comment: ${{ join(steps.*.outputs.value, '') }}
    steps:
      - name: greeting on first issue
        id: greeting-on-first-issue
        if: github.event.action == 'opened' && needs.issue.outputs.user-issues-total == 0
        uses: mkungla/actions-set-text-output@v1
        with:
          text: |
            ðŸ‘‹ Thanks for reporting @${{ github.event.sender.login }}!
            This your first issue.
            ***
      - name: greeting for reccuring user
        id: greeting-for-reccuring-user
        if: github.event.action == 'opened' && needs.issue.outputs.user-issues-total > 0
        uses: mkungla/actions-set-text-output@v1
        with:
          text: |
            :boom: Thanks for reporting again @${{ github.event.sender.login }}!
            You have opened total **${{ needs.issue.outputs.user-issues-total }}** issues in this repository.
            ***
      - name: comment on empty description
        id: comment-on-empty-description
        if: github.event.action == 'opened' && !github.event.issue.body
        uses: mkungla/actions-set-text-output@v1
        with:
          text: |
            Perhaps edit you issue and add some more detail to issue description?
            ***
      - name: opened issue footer
        id: opened-issue-footer
        if: github.event.action == 'opened'
        uses: mkungla/actions-set-text-output@v1
        with:
          text: |
            Your issue will be reviewed shortly!
            ${{ needs.issue.outputs.zen }}
            This is automated message by **GitHub Actions**

            ***

  # daily schedule
  daily:
    needs: schedule
    if: github.event.schedule == '0 0 * * *'
    runs-on: ubuntu-latest
    steps:
      - if: ${{ contains(toJSON(github.event), 'daily') }}
        run: exit 1

  hacktoberfest:
    needs: schedule
    if: |
      github.event.schedule == '0 0 * 10 *' ||
      github.event.schedule == '0 0 1 11 *' ||
      github.event.schedule == '*/5 * * * *'

    runs-on: ubuntu-latest
    steps:
      - uses: browniebroke/hacktoberfest-labeler-action@main
        continue-on-error: true # topic error - GITHUB_TOKEN do not have permissions
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}


  # should add remove labels
  manage-labels:
    needs:
      - issue
    runs-on: ubuntu-latest
    outputs:
      add_labels: ${{ join(steps.*.outputs.add_labels, ',') }}
      remove_labels: ${{ join(steps.*.outputs.remove_labels, ',') }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: on open add labels
        id: on-open-add-labels
        if: github.event.action == 'opened' && !contains(github.event.issue.labels.*.name, 'triage')
        run: echo "::set-output name=add_labels::triage"

      - name: on potential question
        id: on-potential-question
        if: github.event.action == 'opened' && endsWith(github.event.issue.title, '?')
        run: echo "::set-output name=add_labels::question"

      - name: on close remove labels
        id: on-close-remove-labels
        if: github.event.action == 'closed' && contains(github.event.issue.labels.*.name, 'triage')
        run: echo "::set-output name=remove_labels::triage"

      - name: on pinned add labels
        id: on-pinned-add-labels
        if: github.event.action == 'pinned' && !contains(github.event.issue.labels.*.name, 'attention')
        run: echo "::set-output name=add_labels::attention"

      - name: on unpinned remove labels
        id: on-unpinned-remove-labels
        if: github.event.action == 'unpinned' && contains(github.event.issue.labels.*.name, 'attention')
        run: echo "::set-output name=remove_labels::attention"

      - name: belongs to feature
        if: github.event.action == 'opened'
        id: belongs-to-feature
        uses: actions/github-script@v4
        with:
          script: |
            const events = await github.issues.listEventsForTimeline({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              issue_number: context.issue.number,
            })

            const pi = events.data.filter((item) =>
              (item.event === 'cross-referenced' && item.source))

            if (pi.length === 0) {
              return
            }

            const belongs = pi.filter((item) => item.source.issue.labels
              .filter((label) => label.name.toLowerCase() === 'feature').length > 0)

            if (belongs.length > 0) {
              core.setOutput('add_labels', 'task')
            }

  #############################################################################
  # Workflow actors
  #############################################################################

  # comment on issue
  create-comment:
    # all the jobs which can comment
    needs:
      - compose-comment
      - manage-labels
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled') &&
      contains(join(needs.*.outputs.issue_url, ''), 'https://') &&
      join(needs.*.outputs.issue_comment, '') != ''
    runs-on: ubuntu-latest
    env:
      issue_url: ${{ join(needs.*.outputs.issue_url, '') }}
      issue_comment: ${{ join(needs.*.outputs.issue_comment, '') }}
    steps:
      # POST copmment
      - name: post comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh issue comment ${{ env.issue_url }} --body "${{ env.issue_comment }}"

  # add labels
  add-labels:
    needs:
      - manage-labels
    runs-on: ubuntu-latest
    if: join(needs.*.outputs.add_labels, ',') != ''
    env:
      add_labels: ${{ join(needs.*.outputs.add_labels, ',') }}
    steps:
      - name: add labels
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh issue edit ${{ github.event.issue.html_url }} --add-label "${{ env.add_labels }}"

  # remove labels
  remove-labels:
    needs:
      - manage-labels
    runs-on: ubuntu-latest
    if: join(needs.*.outputs.remove_labels, ',') != ''
    env:
      add_labels: ${{ join(needs.*.outputs.remove_labels, ',') }}
    steps:
      - name: remove labels
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh issue edit ${{ github.event.issue.html_url }} --remove-label "${{ env.remove_labels }}"

  # add reactions
  reaction:
    needs:
      - issue
    runs-on: ubuntu-latest
    steps:
      - if: github.event.action == 'opened'
        uses: actions/github-script@v4
        with:
          script: |
            github.reactions.createForIssue({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: 'heart',
            })
  # check stale issues
  stale:
    needs:
      - daily
      - issue-comment
    # only run on schedule and issue comment
    # also would be nice to skip that if this job was just executed
    # e.g. on heated discussion under issue.
    if: always() && github.event_name != 'issues'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v4
        with:
          days-before-issue-stale: 30
          days-before-issue-close: 14
          stale-issue-message: 'This issue has no activity for a while. It will be closed if no action is taken in near future'
          close-issue-message: 'This issue was closed since there was no activity after it was marked stale.'
          stale-issue-label: 'stale'
          exempt-issue-labels: 'bug,security'
          remove-issue-stale-when-updated: true
          labels-to-add-when-unstale: 'triage'
          exempt-all-issue-milestones: true
          days-before-pr-stale : -1
          days-before-pr-close: -1

  #############################################################################
  # SELF UPDATE
  #############################################################################
  update:
    if: |
      github.event_name == 'repository_dispatch' &&
      github.event.action == 'workflow-file-github-issues'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: wget -N -P .github/workflows https://raw.githubusercontent.com/howijd/.github/main/workflow-templates/github-issues.yml
      - uses: peter-evans/create-pull-request@v3.10.1
        with:
          token: ${{ secrets.HOWIBOT_GITHUB_TOKEN }}
          commit-message: 'update github-issues.yml based on upstream'
          signoff: true
          branch: patch/github-issues.yml
          delete-branch: true
          committer: HOWI BOT <howi@howijd.network>
          base: main
          title: update github-issues.yml based on upstream
          body: |
            **NOTICE!**

            This Workflow file is tested with [this workflow](https://github.com/howijd/.github/blob/main/.github/workflows/github-issues.yml)
            And based on this [workflow file](https://github.com/howijd/.github/blob/main/workflow-templates/github-issues.yml)
          labels: enhancement

  # SHOULD RUN ONLY IN .github REPO TO DISPATCH FOR OTHER REPOS
  dipatch-update:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.repository == 'howijd/.github'
    strategy:
      matrix:
        repo:
          - howijd/howijd.network
          - howijd/howijd.org
          - howijd/howijd.com
          - howijd/howi
    steps:
      - uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.HOWIBOT_GITHUB_TOKEN }}
          repository: ${{ matrix.repo }}
          event-type: workflow-file-github-issues
